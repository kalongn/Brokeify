import { test, expect } from '@playwright/test';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Fix for __dirname in ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Reusable constants
const baseURL = 'http://localhost:5173';
const scenarioId = '67fd9ae64a43b21f5a26b936';

test.beforeEach(async ({ page }) => {
  
  console.log('Before tests: created a scenario named Scenario 1');
  await page.goto(`${baseURL}/`);
  await page.getByRole('link', { name: 'Continue as Guest' }).click();
  await page.goto(`${baseURL}/Home`);
});



test('Invalid Number of Runs', async ({ page }) => {
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('55');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
  
 await expect(page.getByRole('main')).toContainText('Please enter a number between 10 and 50.');
});

test('Simulation Tab Navigation', async ({ page }) => {
    
  await page.getByRole('link', { name: 'Simulation' }).click();
  await expect(page.getByRole('main')).toContainText('Scenario Simulation');
});



test('Simulation Successfully Run', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('10');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
    await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
});

test('Navigating to Charts Page', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
    await page.getByRole('link', { name: 'Create Scenario' }).click();
    await page.getByRole('textbox', { name: 'Scenario Name' }).click();
    await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
    await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
    await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
    await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
    await page.locator('.css-19bb58m').click();
    await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
    await page.getByRole('option', { name: 'Washington' }).click();
    await page.getByRole('radio', { name: 'Single' }).check();
    await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
    await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
    await page.getByRole('radio', { name: 'Fixed Value' }).check();
    await page.getByTestId('fixedInput').click();
    await page.getByTestId('fixedInput').fill('120');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
    await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
    await page.getByTestId('fixedInput').click();
    await page.getByTestId('fixedInput').fill('5');
    await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
    await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
    await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
    await expect(page).toHaveURL("http://localhost:5173/Home");
    await page.getByText('My Profile').click();
    await page.getByText('My Scenarios').click();
    await page.goto('http://localhost:5173/Home');
    await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
    await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
    await page.locator('#sim-count').click();
    await page.locator('#sim-count').fill('10');
    await page.getByRole('button', { name: 'Run Simulation' }).click();
      await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await expect(page.getByRole('main')).toContainText('Add Charts');
});

test('Add Charts Pop-Up', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('10');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
    await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await page.getByRole('link', { name: 'See Results' }).click();
  await page.getByRole('button', { name: 'Add Charts' }).click();
  await expect(page.getByLabel('Modal')).toContainText('Line Chart');
  await page.getByText('Line ChartProbability of').click();
  await page.getByRole('button', { name: 'Save & Add Chart' }).click();
  await expect(page.getByRole('main')).toContainText('Line Chart');
});

test('Add Line Chart as Accordion', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
    await page.getByRole('link', { name: 'Create Scenario' }).click();
    await page.getByRole('textbox', { name: 'Scenario Name' }).click();
    await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
    await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
    await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
    await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
    await page.locator('.css-19bb58m').click();
    await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
    await page.getByRole('option', { name: 'Washington' }).click();
    await page.getByRole('radio', { name: 'Single' }).check();
    await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
    await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
    await page.getByRole('radio', { name: 'Fixed Value' }).check();
    await page.getByTestId('fixedInput').click();
    await page.getByTestId('fixedInput').fill('120');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
    await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
    await page.getByTestId('fixedInput').click();
    await page.getByTestId('fixedInput').fill('5');
    await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
    await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
    await page.getByRole('button', { name: 'Next' }).click();
    await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
    await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
    await expect(page).toHaveURL("http://localhost:5173/Home");
    await page.getByText('My Profile').click();
    await page.getByText('My Scenarios').click();
    await page.goto('http://localhost:5173/Home');
    await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
    await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
    await page.locator('#sim-count').click();
    await page.locator('#sim-count').fill('10');
    await page.getByRole('button', { name: 'Run Simulation' }).click();
      await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await page.getByRole('link', { name: 'See Results' }).click();
  await page.getByRole('button', { name: 'Add Charts' }).click();
  await page.getByText('Line ChartProbability of').click();
  await page.getByRole('button', { name: 'Save & Add Chart' }).click();
  await expect(page.getByRole('main')).toContainText('Line Chart');
});

test('Shaded Line Chart - Error Validation', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('10');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
    await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await page.getByRole('link', { name: 'See Results' }).click();
  await page.getByRole('button', { name: 'Add Charts' }).click();
  await page.getByText('Shaded Line ChartProbability').click();
  await page.getByRole('combobox').selectOption('Total Investments');
  await page.getByRole('button', { name: 'Save & Add Chart' }).click();
  await expect(page.getByLabel('Modal')).toContainText('Please choose a dollar value (Today or Future).');
});

test('Stacked Bar Chart - Error Validation', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('10');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
    await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await page.getByRole('link', { name: 'See Results' }).click();
  await page.getByRole('button', { name: 'Add Charts' }).click();
  await page.getByRole('heading', { name: 'Stacked Bar Chart' }).click();
  await page.getByRole('button', { name: 'Save & Add Chart' }).click();
  await expect(page.getByLabel('Modal')).toContainText('Please select Median or Average.');
  await expect(page.getByLabel('Modal')).toContainText('Please select a quantity.');
  await expect(page.getByLabel('Modal')).toContainText('Please enter an aggregation threshold.');
  await expect(page.getByLabel('Modal')).toContainText('Please choose a dollar value (Today or Future).');
});

test('Generate Chart', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('5173');
  await page.locator('.css-19bb58m').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('Was');
  await page.getByRole('option', { name: 'Washington' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2000');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('120');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investment Types');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Investments');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Event Series');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Inflation & Contribution Limits');
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('5');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Spending Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Expense Withdrawal Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.locator('[id="_heading_nmd6n_1"]')).toContainText('Roth Conversion Strategy & Optimizer');
  await page.getByRole('button', { name: 'Save & Close' }).click({ force: true });
  await expect(page).toHaveURL("http://localhost:5173/Home");
  await page.getByText('My Profile').click();
  await page.getByText('My Scenarios').click();
  await page.goto('http://localhost:5173/Home');
  await page.getByRole('link', { name: 'Simulation' }).click({ force: true });
  await page.getByRole('combobox').selectOption({ label: 'Scenario 1' });
  await page.locator('#sim-count').click();
  await page.locator('#sim-count').fill('10');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
    await expect(page.getByRole('main')).toContainText('See Results', { timeout: 90_000 });
  await page.getByRole('button', { name: 'Generate Charts' }).click();
  await expect(page.getByRole('main')).toContainText('Line Chart');
});

// Coverage writing hook
test.afterEach(async ({ page }) => {
  const coverage = await page.evaluate(() => window.__coverage__);

  if (coverage) {
    const outputDir = path.resolve(__dirname, '../.nyc_output');
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }
    const filePath = path.join(outputDir, `coverage-${Date.now()}.json`);
    fs.writeFileSync(filePath, JSON.stringify(coverage));
    console.log(`✅ Coverage written to ${filePath}`);
  } else {
    console.warn('⚠️ window.__coverage__ is undefined (this test might not have hit any instrumented code)');
  }
});
