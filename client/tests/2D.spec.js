import { test, expect } from '@playwright/test';

test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:5173/');
  await page.getByRole('link', { name: 'Continue as Guest' }).click();
  await page.getByRole('link', { name: 'Create Scenario' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).click();
  await page.getByRole('textbox', { name: 'Scenario Name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Scenario Name' }).fill('Scenario 1');
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).click();
  await page.getByRole('spinbutton', { name: 'Financial Goal Specify a non-' }).fill('10000');
  await page.locator('#state svg').click();
  await page.getByRole('combobox', { name: 'State of Residence 50 results' }).fill('New');
  await page.getByRole('option', { name: 'New York' }).click();
  await page.getByRole('radio', { name: 'Single' }).check();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).click();
  await page.getByRole('spinbutton', { name: 'Your Birth Year' }).fill('2004');
  await page.getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('91');
  await expect(page.getByRole('heading', { name: 'Basic Information' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('button', { name: 'Add New Investment Type' }).click();
  await page.getByRole('textbox', { name: 'Investment Type Name' }).click();
  await page.getByRole('textbox', { name: 'Investment Type Name' }).fill('Stocks');
  await page.getByRole('textbox', { name: 'Investment Type Name' }).press('Enter');
  await page.getByTestId('distributions-expectedAnnualReturn').getByRole('radio', { name: 'Fixed Value or Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('10');
  await page.getByRole('spinbutton', { name: 'Expense Ratio' }).click();
  await page.getByRole('spinbutton', { name: 'Expense Ratio' }).fill('2');
  await page.getByTestId('distributions-expectedDividendsInterest').getByRole('radio', { name: 'Fixed Value or Percentage' }).check();
  await page.getByTestId('distributions-expectedDividendsInterest').getByTestId('fixedInput').click();
  await page.getByTestId('distributions-expectedDividendsInterest').getByTestId('fixedInput').fill('99');
  await page.getByRole('radio', { name: 'Taxable' }).check();
  await page.getByRole('button', { name: 'Create' }).click();
  await expect(page.getByRole('heading', { name: 'Investment Types' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Investments' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Create/Edit Scenario' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Add New Investment' }).click();
  await page.getByRole('row', { name: 'Select... Select...' }).locator('svg').first().click();
  await page.getByRole('option', { name: 'Stocks' }).click();
  await page.getByRole('row', { name: 'Stocks Select...' }).getByPlaceholder('$').click();
  await page.getByRole('row', { name: 'Stocks Select...' }).getByPlaceholder('$').fill('1000');
  await page.getByRole('cell', { name: 'Select...' }).locator('svg').click();
  await page.getByRole('option', { name: 'Pre-Tax Retirement' }).click();
  await expect(page.getByRole('heading', { name: 'Investments' })).toBeVisible();
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Create/Edit Scenario' })).toBeVisible({ timeout: 120000 });
  await expect(page.getByRole('heading', { name: 'Event Series' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Add New Event Series' }).click();
  await page.getByRole('textbox', { name: 'Event Series Name' }).click();
  await page.getByRole('textbox', { name: 'Event Series Name' }).fill('Job');
  await page.getByTestId('distributions-startYear').getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('2023');
  await page.getByTestId('distributions-duration').getByRole('radio', { name: 'Fixed Value' }).check();
  await page.getByTestId('distributions-duration').getByTestId('fixedInput').click();
  await page.getByTestId('distributions-duration').getByTestId('fixedInput').fill('30');
  await page.getByRole('radio', { name: 'Income' }).check();
  await page.getByRole('spinbutton', { name: 'Initial Value' }).click();
  await page.getByRole('spinbutton', { name: 'Initial Value' }).fill('120000');
  await page.getByRole('radio', { name: 'Fixed Value or Percentage' }).check();
  await page.getByTestId('distributions-expectedAnnualChange').getByTestId('fixedInput').click();
  await page.getByTestId('distributions-expectedAnnualChange').getByTestId('fixedInput').fill('100');
  await expect(page.getByRole('heading', { name: 'New Event Series' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Create' }).click();
  await expect(page.getByRole('heading', { name: 'Event Series' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Inflation & Contribution' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('radio', { name: 'Fixed Percentage' }).check();
  await page.getByTestId('fixedInput').click();
  await page.getByTestId('fixedInput').fill('10');
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).click();
  await page.getByRole('spinbutton', { name: 'After-Tax Retirement Accounts' }).fill('100');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Spending Strategy' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Expense Withdrawal Strategy' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Create/Edit Scenario' })).toBeVisible({ timeout: 120000 });
  await expect(page.getByRole('heading', { name: 'Required Minimum Distribution' })).toBeVisible({ timeout: 120000 });
  await expect(page.locator('[id="_heading_ucsmd_1"]')).toContainText('Required Minimum Distribution Strategy');
  await page.getByRole('button', { name: 'Next' }).click();
  await expect(page.getByRole('heading', { name: 'Roth Conversion Strategy &' })).toBeVisible({ timeout: 120000 });
  await expect(page.getByRole('heading', { name: 'Create/Edit Scenario' })).toBeVisible({ timeout: 120000 });
  await page.getByRole('button', { name: 'Save & Close' }).click();
  await expect(page.getByRole('heading', { name: 'My Scenarios' })).toBeVisible({ timeout: 120000 });
});


test('Navigate to 2D simulation part', async ({ page }) => {
    await page.goto('http://localhost:5173/Home');
    await expect(page.getByRole('heading', { name: 'My Scenarios' })).toBeVisible();
    await page.getByRole('link', { name: 'Simulation' }).click();
    await expect(page.getByRole('heading', { name: 'Scenario Simulation' })).toBeVisible();
    await page.getByRole('button', { name: '2-D Exploration' }).click();
    await expect(page.getByRole('button', { name: '2-D Exploration' })).toBeVisible();
   
  });


test('Run 2D successfully', async ({ page }) => {
  await page.goto('http://localhost:5173/Home');
  await expect(page.getByRole('heading', { name: 'My Scenarios' })).toBeVisible();
  await page.getByRole('link', { name: 'Simulation' }).click();
  await expect(page.getByRole('heading', { name: 'Scenario Simulation' })).toBeVisible();
  await page.getByRole('button', { name: '2-D Exploration' }).click();
  await expect(page.getByRole('button', { name: '2-D Exploration' })).toBeVisible();
  await page.locator('.css-1xc3v61-indicatorContainer').first().click();
  await page.getByRole('option', { name: 'Scenario 1 | created at 5/5/' }).click();
  await page.getByRole('spinbutton', { name: 'Number of Simulation Runs' }).click();
  await page.getByRole('spinbutton', { name: 'Number of Simulation Runs' }).fill('20');
  await page.locator('label').filter({ hasText: 'Select Parameter 1Select...' }).locator('svg').click();
  await page.getByRole('option', { name: 'Start Year' }).click();
  await page.locator('label').filter({ hasText: 'Select Event Series 1Select...' }).locator('svg').click();
  await page.getByRole('option', { name: 'Job' }).click();
  await page.getByRole('spinbutton', { name: 'Lower Bound' }).click();
  await page.getByRole('spinbutton', { name: 'Lower Bound' }).fill('2022');
  await page.getByRole('spinbutton', { name: 'Upper Bound' }).click();
  await page.getByRole('spinbutton', { name: 'Upper Bound' }).fill('2024');
  await page.getByRole('spinbutton', { name: 'Step Size' }).click();
  await page.getByRole('spinbutton', { name: 'Step Size' }).fill('1');
  await page.locator('label').filter({ hasText: 'Select Parameter 2Select...' }).locator('path').click();
  await page.getByRole('option', { name: 'Initial Amount' }).click();
  await page.locator('label').filter({ hasText: 'Select Event Series 2Select...' }).locator('path').click();
  await page.locator('input[name="lowerBound2"]').fill('1000');
  await page.locator('input[name="upperBound2"]').click();
  await page.locator('input[name="upperBound2"]').fill('2000');
  await page.locator('input[name="stepSize2"]').click();
  await page.locator('input[name="upperBound2"]').click();
  await page.locator('input[name="upperBound2"]').fill('1200');
  await page.locator('input[name="stepSize2"]').click();
  await page.locator('input[name="stepSize2"]').fill('100');
  await page.getByRole('button', { name: 'Run Simulation' }).click();
  await expect(page.getByRole('link', { name: 'See 2D Results' })).toBeVisible();
  await page.getByRole('link', { name: 'See 2D Results' }).click();
  await expect(page.getByRole('heading', { name: 'Scenario 1 2D Results' })).toBeVisible();
});