
name: "Fixed Testing Scenario"
maritalStatus: individual 
birthYears: [2000] 
lifeExpectancy: [ {type: fixed, value: 34}] #10 years of simulation 

investmentTypes:
  - name: Cash
    description: cash
    returnAmtOrPct: amount # "amount" or "percent"
    returnDistribution: {type: fixed, value: 0}
    expenseRatio: 0
    incomeAmtOrPct: percent
    incomeDistribution: {type: fixed, value: 0}
    taxability: false # Boolean.  true = taxable, false = tax-exempt

  - name: tax-exempt bonds
    description: NY tax-exempt bonds
    returnAmtOrPct: percent # whether expected annual return is specified as a dollar "amount" or a "percent"
    returnDistribution: {type: fixed, value: 0.05}
    expenseRatio: 0
    incomeAmtOrPct: percent
    incomeDistribution: {type: fixed, value: 0}
    taxability: false

# investment id is a unique identifier.  without it, we would need to use a pair (investment type, tax status) to identify an investment.
investments:
  - investmentType: Cash
    value: 0
    taxStatus: non-retirement # "non-retirement", "pre-tax", or "after-tax"
    id: Cash
  - investmentType: tax-exempt bonds
    value: 10000
    taxStatus: non-retirement
    id: tax-exempt bonds

 
eventSeries:
  - name: salary
    start: {type: fixed, value: 2025} # a fixed, normal, or uniform distribution (as above) or a map with the form {type: startWith, eventSeries: <name>} or {type: startAfter, eventSeries: <name>}
    duration: {type: fixed, value: 70}
    type: income # "income", "expense", "invest", or "rebalance"
    initialAmount: 7500
    changeAmtOrPct: amount
    changeDistribution: {type: fixed, value: -100}
    inflationAdjusted: false # boolean
    userFraction: 1 # fraction of the amount associated with the user.  the rest is associated with the spouse.
    socialSecurity: false  # boolean

  - name: food
    start: {type: startsWith, eventSeries: salary}  # starts in same year as salary
    duration: {type: fixed, value: 200}  # lasts for the rest of the user's life
    type: expense
    initialAmount: 5000
    changeAmtOrPct: percent
    changeDistribution: {type: fixed, value: 0} 
    inflationAdjusted: true
    userFraction: 1
    discretionary: false

  - name: vacation
    start: {type: startsWith, eventSeries: salary}  # starts in same year as salary
    duration: {type: fixed, value: 40}
    type: expense
    initialAmount: 2000
    changeAmtOrPct: amount
    changeDistribution: {type: fixed, value: 0}
    inflationAdjusted: false
    userFraction: 1
    discretionary: true

inflationAssumption: {type: fixed, value: 0.03}
afterTaxContributionLimit: 7000 # annual limit on contributions to after-tax retirement accounts
spendingStrategy: ["vacation"]  # list of discretionary expenses, identified by name
expenseWithdrawalStrategy: [tax-exempt bonds] # list of investments, identified by id
RMDStrategy: [] # list of pre-tax investments, identified by id
RothConversionOpt: false   # boolean indicating whether the Roth Conversion optimizer is enabled
RothConversionStrategy: []  # list of pre-tax investments, identified by id
financialGoal: 10000
residenceState: CA  # states are identified by standard 2-letter abbreviations
